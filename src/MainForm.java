
import java.awt.Color;
import java.awt.Graphics;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.DecimalFormat;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author emrahgumus
 */
public class MainForm extends javax.swing.JFrame {

    JPanel NewJPanel = new JPanel();
    int diziBoyutu = 0;

    int[][] RMatrisi;
    double[][] QMatrisi;

    String dosyaYolu = "";

    int baslangicDugumu = 0;
    int bitisDugumu = 17;

    String gidilenYol = "";


    int maxiterasyon = 0;
    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.setText("0");
        jTextField1.setName("baslangicTField"); // NOI18N

        jTextField2.setText("17");
        jTextField2.setName("BitisTField"); // NOI18N

        jButton2.setText("Çiz");
        jButton2.setName("cizBtn"); // NOI18N
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jTextField3.setText("yol5.txt");

        jTextField4.setText("1000");

        jLabel1.setText("iterasyon");

        jLabel2.setText("Matris Dosyası");

        jLabel3.setForeground(new java.awt.Color(0, 200, 0));
        jLabel3.setText("Bas");

        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("Bitis");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(164, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addComponent(jLabel4))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(476, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:


        maxiterasyon = Integer.parseInt(jTextField4.getText());
        dosyaYolu = "ornekYollar"+jTextField3.getText();
        diziBoyutu = 0;

        FileReader fileReader;
        BufferedReader br;
        try {
            fileReader = new FileReader(dosyaYolu);

            br = new BufferedReader(fileReader);
            while((br.readLine()) != null){
                diziBoyutu++;
            }
            br.close();

        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }

        RMatrisi = new int[diziBoyutu][diziBoyutu]; //x,y
        QMatrisi = new double[diziBoyutu][diziBoyutu]; //x,y

        for (int i = 0; i < diziBoyutu; i++) {
            for (int j = 0; j < diziBoyutu; j++) {
                RMatrisi[i][j] = -1;
                QMatrisi[i][j] = 0;
            }
        }

        baslangicDugumu = Integer.parseInt(jTextField1.getText());
        bitisDugumu = Integer.parseInt(jTextField2.getText());

        //RMatrisi[bitisDugumu][bitisDugumu] = 125;

        gidilenYol = "";

        YolariBelirle();
        matrisYaz("R Matrisi", RMatrisi);

        yolBul();

        matrisYaz("Q Matrisi", QMatrisi);

        getContentPane().add(NewJPanel);
        NewJPanel.setBounds(10, 10, 500, 450);
        NewJPanel.setVisible(true);

        matrisCiz(NewJPanel.getGraphics());

        yoluCiz(NewJPanel.getGraphics(), baslangicDugumu);

        matrisToFileWrite(QMatrisi, "output/outQ.txt", "** Q Matrisi **");
        matrisToFileWrite(RMatrisi, "output/outR.txt", "** R Matrisi **");

        gidilenYol += Integer.toString(bitisDugumu);

        matrisToFileWriteM(null, "output/outPath.txt", "Gidilen en kısa yol: \n\n" + gidilenYol);
        System.out.println(gidilenYol);
    }//GEN-LAST:event_jButton2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
           public void run() {
                new MainForm().setVisible(true);
            }
        });

    }


public double yolBul(){

    int[] komsular = new int[diziBoyutu];

    for(int k = 0; k < maxiterasyon; ++k){

        Random rand = new Random();
        int start = (rand.nextInt(diziBoyutu) + 1) % diziBoyutu;
        int komsuSayisi;
        double max = 0;

        do{
            for(int t=0; t < diziBoyutu; ++t)
                komsular[t] = -2;

            int m = 0;
            for(int l = 0; l < diziBoyutu; ++l){
                if(RMatrisi[start][l] != -1){
                    komsular[m] = l;
                    ++m;
                }
            }
            komsuSayisi = m;

            int j = (rand.nextInt(diziBoyutu) + 1) % komsuSayisi;
            int index = komsular[j];

            m = 0;
            for(int t=0; t < diziBoyutu; ++t)
                komsular[t] = -2;
            for(int l=0; l < diziBoyutu; ++l){
                if(RMatrisi[index][l] != -1){
                    komsular[m] = l;
                    ++m;
                }
            }
            komsuSayisi = m;

            max = QMatrisi[index][komsular[0]];
            for(int y = 0; y < komsuSayisi; ++y){
                if(QMatrisi[index][komsular[y]] > max)
                    max = QMatrisi[index][komsular[y]];
            }
            QMatrisi[start][index] = (RMatrisi[start][index] + ( 0.8 * max ));

            start = index;

       }while(start != bitisDugumu);
    }
    return 0;
}


public void YolariBelirle(){

    FileReader fileReader;
    BufferedReader br;
    try {
        fileReader = new FileReader(dosyaYolu);

        String line;
        br = new BufferedReader(fileReader);
        int x = 0;
        while((line = br.readLine()) != null){

            String[] parts = line.split(",");

            for(int n = 0; n < parts.length; n++) {

                int y = Integer.parseInt(parts[n]);
                if(y == bitisDugumu )
                    RMatrisi[x][y] = 100;
                if (x == bitisDugumu )
                    RMatrisi[x][x] = 100;
                if(x == bitisDugumu && y != bitisDugumu)
                    RMatrisi[x][y] = 0;
                if(x != bitisDugumu && y != bitisDugumu)
                    RMatrisi[x][y] = 0;
            }
            x++;
        }
        br.close();

    } catch (FileNotFoundException ex) {
        Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
    } catch (IOException ex) {
        Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
    }
}

    public void matrisToFileWriteM(int[][] matris, String dAdi, String dBaslik){

        BufferedWriter bw = null;
        FileWriter fw = null;

        try {
            fw = new FileWriter(dAdi);
            bw = new BufferedWriter(fw);
            bw.write(dBaslik+"\n\n");

            if(matris != null){
                for(int i = 0; i<diziBoyutu; i++){
                    for (int j = 0; j < diziBoyutu; j++) {
                        bw.write(matris[i][j]+" ");
                    }
                    bw.write("\n");
                }
            }
            bw.close();
            fw.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public void matrisToFileWrite(int[][] matris, String dAdi, String dBaslik){

        BufferedWriter bw = null;
        FileWriter fw = null;

        try {
            fw = new FileWriter(dAdi);
            bw = new BufferedWriter(fw);
            bw.write(dBaslik+"\n\n");

            if(matris != null){
                for(int i = 0; i<diziBoyutu; i++){
                    for (int j = 0; j < diziBoyutu; j++) {
                        bw.write(matris[i][j]+" ");
                    }
                    bw.write("\n");
                }
            }
            bw.close();
            fw.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public void matrisToFileWrite(double[][] matris, String dAdi, String dBaslik){

        BufferedWriter bw = null;
        FileWriter fw = null;

        try {
            fw = new FileWriter(dAdi);
            bw = new BufferedWriter(fw);
            bw.write(dBaslik+"\n\n");

            if(matris != null){
                for(int i = 0; i<diziBoyutu; i++){
                    for (int j = 0; j < diziBoyutu; j++) {

                        DecimalFormat form = new DecimalFormat("###.##");

                        bw.write(form.format(matris[i][j])+" ");
                    }
                    bw.write("\n");
                }
            }
            bw.close();
            fw.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public void matrisYaz(String str, double[][] matris){

        System.out.println();
        System.out.println("*** "+str+" ***");

        for (int i = 0; i < diziBoyutu; i++) {
            for (int j = 0; j < diziBoyutu; j++) {
                System.out.print(matris[i][j] + " ");
            }
            System.out.println();
        }
        System.out.println();
        System.out.println();
    }

    public void matrisYaz(String str, int[][] matris){

        System.out.println();
        System.out.println("*** "+str+" ***");

        for (int i = 0; i < diziBoyutu; i++) {
            for (int j = 0; j < diziBoyutu; j++) {
                System.out.print(matris[i][j] + " ");
            }
            System.out.println();
        }
        System.out.println();
        System.out.println();
    }


    protected void matrisCiz(Graphics g) {

        g.setColor(Color.white);

        for(int a = 0; a<30*60; a++){
            g.drawLine(0, a, 60 * 30, 0);
        }

        int basi = (int) (baslangicDugumu / Math.sqrt(diziBoyutu));
        int basj = (int) (baslangicDugumu % Math.sqrt(diziBoyutu));

        g.setColor(Color.green);//i,j
        g.drawString("B", basj*60+10, basi*60+20);


        int biti = (int) (bitisDugumu / Math.sqrt(diziBoyutu));
        int bitj = (int) (bitisDugumu % Math.sqrt(diziBoyutu));

        g.setColor(Color.red);//j,i
        g.drawString("B", bitj*60+10, biti*60+20);

        g.setColor(Color.red);

        System.out.println();

        for (int i = 0; i < diziBoyutu; i++) {
            for (int j = 0; j < diziBoyutu; j++) {


                if(RMatrisi[i][j] >= 0){

                    /* Bulunduğu konumu veriyor.
                    */
                    int konumi = (int) (i / Math.sqrt(diziBoyutu));
                    int konumj = (int) (j % Math.sqrt(diziBoyutu));

                    /*
                    * Gideceği hedef
                    */
                    int hedefi = (int) (j / Math.sqrt(diziBoyutu));
                    int hedefj = (int) (i % Math.sqrt(diziBoyutu));


                    g.drawLine(konumj*60+20, konumi*60+20, hedefj*60+20, hedefi*60+20);


                    g.drawString(Integer.toString((konumi*((int)Math.sqrt(diziBoyutu)))+konumj), konumj*60+25, konumi*60+18);


                    //System.out.print(konumi + "," +konumj+ " -> " + hedefi + "," + hedefj+ "  ");

                }
            }
            System.out.println();
        }


    }

    public int yoluCiz(Graphics g, int i){


        g.setColor(Color.black);

        int maxi=0,maxj=0;
        double max=0;

        for (int j = 0; j < diziBoyutu; j++) {

            if(QMatrisi[i][j] > 0){

                if(QMatrisi[i][j] > max){
                    maxi = i;
                    maxj = j;
                    max  = QMatrisi[i][j];
                }
            }
        }

        if(max > 0 && maxi != bitisDugumu){

            /* Bulunduğu konumu veriyor.
            */
            int konumi = (int) (maxi / Math.sqrt(diziBoyutu));
            int konumj = (int) (maxj % Math.sqrt(diziBoyutu));

            /*
            * Gideceği hedef
            */
            int hedefi = (int) (maxj / Math.sqrt(diziBoyutu));
            int hedefj = (int) (maxi % Math.sqrt(diziBoyutu));
            g.drawLine(konumj*60+21, konumi*60+21, hedefj*60+21, hedefi*60+21);

            gidilenYol += (maxi)+"->";

            return yoluCiz(g, maxj);
        }

        return 1;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables

}
